#version 460
#extension GL_GOOGLE_include_directive : enable
// #extension GL_EXT_debug_printf: enable
#include "../common/grid.comp"
#include "../common/utils.comp"

layout(local_size_x = GRID_LOCAL_SIZE_X, local_size_y = GRID_LOCAL_SIZE_Y, local_size_z = GRID_LOCAL_SIZE_Z) in;

layout(std430, binding = 0) buffer WorldFlowGridBuffer {
	WorldFlowGrid wfGrid;
};

layout(push_constant) uniform PushConstants {
    uint coarseSubgridLevel;
} pc;



void main()
{
    WorldFlowSubGrid grid = wfGrid.subgrids[pc.coarseSubgridLevel].ref;
    uvec3 gridPos = getGridPos(wfGrid, pc.coarseSubgridLevel, gl_GlobalInvocationID, gl_LocalInvocationID, gl_WorkGroupID, gl_NumWorkGroups);
    uint flatGridIndex = getGridIndex(gridPos, grid.resolution);
    if((grid.flagsBuffer.data[flatGridIndex] & FLAG_ACTIVE) == 0) {
        return;
    }

    uint fineSubgridLevel = pc.coarseSubgridLevel + 1;
    uint offsetDstIndex = atomicAdd(wfGrid.subgrids[fineSubgridLevel].ref.indexCount, 1);
    wfGrid.subgrids[fineSubgridLevel].ref.indexOffsets.data[offsetDstIndex] = flatGridIndex;
}