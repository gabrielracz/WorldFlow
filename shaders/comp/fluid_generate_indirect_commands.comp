#version 460
#extension GL_GOOGLE_include_directive : enable
// #extension GL_EXT_debug_printf: enable
#include "../common/grid.comp"
#include "../common/utils.comp"

layout(local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(std430, binding = 0) buffer WorldFlowGridBuffer {
	WorldFlowGrid wfGrid;
};

layout(push_constant) uniform PushConstants {
    uint subgridLevel;
    uint groupDimensionLimit;
} pc;



void main()
{
    WorldFlowSubGrid grid = wfGrid.subgrids[pc.subgridLevel].ref;
    const uint totalNumWorkgroups = grid.indexCount;

    // Fill the indirect dispatch structure to dispatch one workgroup per index, ensuring no dimension is greater than specified limit
    uint remaining = totalNumWorkgroups;

    uint groupCountX = min(remaining, pc.groupDimensionLimit);
    remaining -= groupCountX;

    uint groupCountY = min(remaining, pc.groupDimensionLimit);
    remaining -= groupCountY;

    uint groupCountZ = remaining; // Whatever is left (can be 0)

    groupCountX = max(groupCountX, 1u);
    groupCountY = max(groupCountY, 1u);
    groupCountZ = max(groupCountZ, 1u);

    wfGrid.subgrids[pc.subgridLevel].ref.dispatch.command = DispatchIndirectCommand(groupCountX, groupCountY, groupCountZ);
}